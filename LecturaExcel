package LecturaExcel;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Date;
import java.util.Iterator;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelRead2 {

	public static void main(String[] args) {

		File archivo = new File("BPM.xlsx");

		try {
			FileInputStream input = new FileInputStream(archivo);
			XSSFWorkbook libro = new XSSFWorkbook(input);
			XSSFSheet hoja = libro.getSheetAt(0);

			Row fila = hoja.getRow(2);

			Iterator<Row> filas = hoja.rowIterator();
			Iterator<Cell> columnas = null;
			Row filaNOW = null;
			Cell columnaNOW = null;
			String valorStr = " ";
			double valorDouble = 0;
			
			while(filas.hasNext()) {
				filaNOW=filas.next();
				columnas=filaNOW.cellIterator();
				while(columnas.hasNext()){
					columnaNOW=columnas.next(); 
					if (columnaNOW.getCellType() == CellType.STRING) {
						valorStr = columnaNOW.getStringCellValue();
						try {
							// Intentar convertir el valor de String a double
							valorDouble = Double.parseDouble(valorStr);
							System.out.println("Valor como double: " + valorDouble);
							// Aquí puedes pasar el valor a la clase ProcesadorValor si necesitas hacer algo con él
							AnalizadorBPM procesador = new AnalizadorBPM(valorDouble);
							procesador.procesarValor();
						} catch (NumberFormatException e) {
							// Si no se puede convertir a double, imprimir un mensaje de error
							System.out.println("Error: No se puede convertir el valor a double.");
						}
					} else if (columnaNOW.getCellType() == CellType.NUMERIC && DateUtil.isCellDateFormatted(columnaNOW)) {
						Date fecha = columnaNOW.getDateCellValue();
						System.out.println("Fecha: " + fecha);
					}
				}
			}

			input.close();
			libro.close();

		} catch (Exception e) {

			e.printStackTrace();
		}


	}

}

